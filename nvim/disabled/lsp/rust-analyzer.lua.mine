-- local keymap = require("keymaps.lsp")

print("Loading rust-analyzer configuration...")

return {
	cmd = { "rust-analyzer" },
	on_attach = function(client, bufnr)
		-- Set inlay hint highlighting (from your original config)
		vim.api.nvim_set_hl(0, "LspInlayHint", { fg = "#575B6E", italic = true })
		vim.lsp.inlay_hint.enable(true, { bufnr = bufnr })
		-- keymap.set_keymap(client, bufnr)
	end,
	capabilities = {
		offsetEncoding = { "utf-8", "utf-16" },
		positionEncodings = { "utf-8", "utf-16" },
	},
	root_markers = { "Cargo.toml", ".git" },
	settings = {
		["rust-analyzer"] = {
			cargo = {
				allFeatures = true,
				targetDir = "target/rust-analyzer",
				extraEnv = { RUSTFLAGS = "-C debuginfo=0" },
				buildScripts = {
					enable = true,
					rebuildOnSave = false,
				},
			},
			checkOnSave = {
				enable = true,
				command = "check",
				extraArgs = { "--target-dir", "target/rust-analyzer" },
			},
			files = {
				excludeDirs = {
					".git",
					".venv",
					".terraform",
					"target",
					"node_modules",
					"gistia-design-system/node_modules",
				},
				watcher = "client",
			},
			diagnostics = {
				enable = true,
				experimental = { enable = false },
				refreshSupport = false,
			},
			procMacro = {
				ignored = {
					leptos_macro = { "server" },
				},
			},
			cache = { warmup = true },
			workspace = { refreshTime = 150 },
			imports = { group = { enable = false } },
			completion = {
				postfix = { enable = false },
				fullFunctionSignatures = { enable = true },
			},
			rustfmt = { enable = true },
			semanticHighlighting = {
				doc = { comment = { inject = { enable = false } } },
			},
		},
	},
	filetypes = { "rust" },
}
